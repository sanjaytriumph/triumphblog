{"ast":null,"code":"import _slicedToArray from\"D:/myreact/triumphblog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"./App.css\";import{useState}from\"react\";import{BrowserRouter,Route,Switch}from\"react-router-dom\";import Home from\"./pages/Home\";import NavBar from\"./components/NavBar\";import PostDetail from\"./components/PostDetail\";import AddPost from\"./components/AddPost\";import DeletePost from\"./components/DeletePost\";import PostByAuthor from\"./components/PostByAuthor\";import Login from\"./components/Login\";import Logout from\"./components/Logout\";import Dashboard from\"./pages/Dashboard\";import AddNewPost from\"./pages/admin/AddNewPost\";import AllPosts from\"./pages/admin/AllPosts\";import EditPostPage from\"./pages/admin/EditPostPage\";import PageNotFound from\"./pages/PageNotFound\";import LoggedinContext from\"./loggedin-context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(sessionStorage.getItem(\"loggedIn\")),_useState2=_slicedToArray(_useState,2),loggedin=_useState2[0],setLoggedin=_useState2[1];var value={loggedin:loggedin,setLoggedin:setLoggedin};console.log(loggedin);var url=\"\";if(process.env.NODE_ENV===\"development\"){url=\"http://localhost:3000/\";}if(process.env.NODE_ENV===\"production\"){url=\"https://my-json-server.typicode.com/sanjaytriumph/mockjson/\";}return/*#__PURE__*/_jsx(LoggedinContext.Provider,{value:value,children:/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(NavBar,{})})}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Home,{apiurl:url})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/post-detail/:id\",children:/*#__PURE__*/_jsx(PostDetail,{apiurl:url})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/add-post\",children:/*#__PURE__*/_jsx(AddPost,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/author/:author\",children:/*#__PURE__*/_jsx(PostByAuthor,{apiurl:url})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",children:/*#__PURE__*/_jsx(Login,{apiurl:url})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/logout\",children:/*#__PURE__*/_jsx(Logout,{})}),loggedin?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/admin/dashboard\",children:/*#__PURE__*/_jsx(Dashboard,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/admin/add-new-post\",children:/*#__PURE__*/_jsx(AddNewPost,{apiurl:url})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/admin/all-posts\",children:/*#__PURE__*/_jsx(AllPosts,{apiurl:url})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/admin/edit-post/:id\",children:/*#__PURE__*/_jsx(EditPostPage,{apiurl:url})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/admin/delete-post/:id\",children:/*#__PURE__*/_jsx(DeletePost,{apiurl:url})})]}):\"\",/*#__PURE__*/_jsx(Route,{component:PageNotFound})]})]})});}export default App;","map":{"version":3,"sources":["D:/myreact/triumphblog/src/App.js"],"names":["useState","BrowserRouter","Route","Switch","Home","NavBar","PostDetail","AddPost","DeletePost","PostByAuthor","Login","Logout","Dashboard","AddNewPost","AllPosts","EditPostPage","PageNotFound","LoggedinContext","App","sessionStorage","getItem","loggedin","setLoggedin","value","console","log","url","process","env","NODE_ENV"],"mappings":"6IAAA,MAAO,sCAAP,CACA,MAAO,WAAP,CACA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,aAAT,CAAwBC,KAAxB,CAA+BC,MAA/B,KAA6C,kBAA7C,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,C,6IAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAgClB,QAAQ,CAACmB,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAD,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,KAAK,CAAG,CAAEF,QAAQ,CAARA,QAAF,CAAYC,WAAW,CAAXA,WAAZ,CAAd,CACAE,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EACA,GAAIK,CAAAA,GAAG,CAAG,EAAV,CACA,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA7B,CAA4C,CAC1CH,GAAG,CAAG,wBAAN,CACD,CAED,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzCH,GAAG,CAAG,6DAAN,CACD,CACD,mBACE,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAEH,KAAjC,uBACE,MAAC,aAAD,yBACE,YAAK,SAAS,CAAC,iBAAf,uBACE,YAAK,SAAS,CAAC,KAAf,uBACE,KAAC,MAAD,IADF,EADF,EADF,cAQE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,uBACE,KAAC,IAAD,EAAM,MAAM,CAAEG,GAAd,EADF,EADF,cAIE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,kBAAlB,uBACE,KAAC,UAAD,EAAY,MAAM,CAAEA,GAApB,EADF,EAJF,cAOE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,WAAlB,uBACE,KAAC,OAAD,IADF,EAPF,cAUE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,iBAAlB,uBACE,KAAC,YAAD,EAAc,MAAM,CAAEA,GAAtB,EADF,EAVF,cAaE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,uBACE,KAAC,KAAD,EAAO,MAAM,CAAEA,GAAf,EADF,EAbF,cAgBE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,SAAlB,uBACE,KAAC,MAAD,IADF,EAhBF,CAmBGL,QAAQ,cACP,wCACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,kBAAlB,uBACE,KAAC,SAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,qBAAlB,uBACE,KAAC,UAAD,EAAY,MAAM,CAAEK,GAApB,EADF,EAJF,cAOE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,kBAAlB,uBACE,KAAC,QAAD,EAAU,MAAM,CAAEA,GAAlB,EADF,EAPF,cAUE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,sBAAlB,uBACE,KAAC,YAAD,EAAc,MAAM,CAAEA,GAAtB,EADF,EAVF,cAaE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,wBAAlB,uBACE,KAAC,UAAD,EAAY,MAAM,CAAEA,GAApB,EADF,EAbF,GADO,CAmBP,EAtCJ,cAwCE,KAAC,KAAD,EAAO,SAAS,CAAEV,YAAlB,EAxCF,GARF,GADF,EADF,CAuDD,CAED,cAAeE,CAAAA,GAAf","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport PostDetail from \"./components/PostDetail\";\r\nimport AddPost from \"./components/AddPost\";\r\nimport DeletePost from \"./components/DeletePost\";\r\nimport PostByAuthor from \"./components/PostByAuthor\";\r\nimport Login from \"./components/Login\";\r\nimport Logout from \"./components/Logout\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport AddNewPost from \"./pages/admin/AddNewPost\";\r\nimport AllPosts from \"./pages/admin/AllPosts\";\r\nimport EditPostPage from \"./pages/admin/EditPostPage\";\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\nimport LoggedinContext from \"./loggedin-context\";\r\n\r\nfunction App() {\r\n  const [loggedin, setLoggedin] = useState(sessionStorage.getItem(\"loggedIn\"));\r\n  const value = { loggedin, setLoggedin };\r\n  console.log(loggedin);\r\n  let url = \"\";\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    url = \"http://localhost:3000/\";\r\n  }\r\n\r\n  if (process.env.NODE_ENV === \"production\") {\r\n    url = \"https://my-json-server.typicode.com/sanjaytriumph/mockjson/\";\r\n  }\r\n  return (\r\n    <LoggedinContext.Provider value={value}>\r\n      <BrowserRouter>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <NavBar />\r\n          </div>\r\n        </div>\r\n\r\n        {/* <h2>Current LoggedIn: {loggedin}</h2> */}\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home apiurl={url} />\r\n          </Route>\r\n          <Route exact path=\"/post-detail/:id\">\r\n            <PostDetail apiurl={url} />\r\n          </Route>\r\n          <Route exact path=\"/add-post\">\r\n            <AddPost />\r\n          </Route>\r\n          <Route exact path=\"/author/:author\">\r\n            <PostByAuthor apiurl={url} />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login apiurl={url} />\r\n          </Route>\r\n          <Route exact path=\"/logout\">\r\n            <Logout />\r\n          </Route>\r\n          {loggedin ? (\r\n            <>\r\n              <Route exact path=\"/admin/dashboard\">\r\n                <Dashboard />\r\n              </Route>\r\n              <Route exact path=\"/admin/add-new-post\">\r\n                <AddNewPost apiurl={url} />\r\n              </Route>\r\n              <Route exact path=\"/admin/all-posts\">\r\n                <AllPosts apiurl={url} />\r\n              </Route>\r\n              <Route exact path=\"/admin/edit-post/:id\">\r\n                <EditPostPage apiurl={url} />\r\n              </Route>\r\n              <Route exact path=\"/admin/delete-post/:id\">\r\n                <DeletePost apiurl={url} />\r\n              </Route>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </LoggedinContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}