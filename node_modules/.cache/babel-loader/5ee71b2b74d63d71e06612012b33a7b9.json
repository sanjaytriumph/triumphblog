{"ast":null,"code":"var _jsxFileName = \"C:\\\\myreact\\\\triumphblog\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport LoggedinContext from '../loggedin-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    loggedin,\n    setLoggedin\n  } = useContext(LoggedinContext);\n  const [submitted, setSubmitted] = useState(false);\n  const [value, setValue] = useState({\n    username: '',\n    password: ''\n  });\n  const [errorClass, setErrorClass] = useState('');\n\n  const onChangeHandler = e => {\n    setValue({ ...value,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitHandler = e => {\n    alert(JSON.stringify(e)); //e.preventDefault();  \n\n    console.log(`submitted with the values ${value.username} and ${value.password}`);\n    axios.get('http://localhost:3000/login').then(res => {\n      const pdata = res.data; //return setPosts(pdata);\n\n      pdata.map((item, index) => {\n        if (item.username == value.username && item.password == value.password) {\n          console.log('good to go'); //sessionStorage.setItem('loggedin','true');\n\n          sessionStorage.setItem('loggedIn', 'true');\n          setSubmitted(true);\n          setLoggedin(sessionStorage.getItem('loggedIn'));\n        } else {\n          console.log('invalid credentials');\n        }\n      });\n    });\n  };\n\n  if (submitted) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      push: true,\n      to: {\n        pathname: '/admin/dashboard'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-header\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmitHandler,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"username\",\n                  className: \"form-label\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  className: `form-control ${errorClass}`,\n                  id: \"username\",\n                  \"aria-describedby\": \"usernameHelp\",\n                  name: \"username\",\n                  onChange: onChangeHandler,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"exampleInputPassword1\",\n                  className: \"form-label\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  autoComplete: \"off\",\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"exampleInputPassword1\",\n                  name: \"password\",\n                  onChange: onChangeHandler,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"C3Ef0sCPnQgRPKSSeL70IeboB7Q=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/myreact/triumphblog/src/components/Login.js"],"names":["React","useState","useContext","Redirect","axios","LoggedinContext","Login","loggedin","setLoggedin","submitted","setSubmitted","value","setValue","username","password","errorClass","setErrorClass","onChangeHandler","e","target","name","onSubmitHandler","alert","JSON","stringify","console","log","get","then","res","pdata","data","map","item","index","sessionStorage","setItem","getItem","pathname"],"mappings":"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","sourcesContent":["import React,{useState, useContext} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\nimport LoggedinContext from '../loggedin-context';\r\n\r\nconst Login = () => {\r\n    const { loggedin, setLoggedin } = useContext(LoggedinContext);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [value, setValue] = useState({\r\n        username:'',\r\n        password:''\r\n    });\r\n    const [errorClass, setErrorClass] = useState('');\r\n\r\n    const onChangeHandler = (e) =>{\r\n        \r\n        setValue({\r\n            ...value,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const onSubmitHandler = (e) =>{\r\n        alert(JSON.stringify(e))\r\n        //e.preventDefault();  \r\n        \r\n        console.log(`submitted with the values ${value.username} and ${value.password}`);\r\n        axios.get('http://localhost:3000/login')\r\n        .then(res => {\r\n          const pdata = res.data;\r\n          //return setPosts(pdata);\r\n         \r\n          pdata.map((item,index) =>{\r\n            \r\n            if(item.username == value.username && item.password == value.password){\r\n                console.log('good to go');\r\n                //sessionStorage.setItem('loggedin','true');\r\n                sessionStorage.setItem('loggedIn','true');\r\n                setSubmitted(true);\r\n                setLoggedin(sessionStorage.getItem('loggedIn'));\r\n                \r\n            }\r\n            else{\r\n                console.log('invalid credentials');\r\n            }\r\n        })\r\n        })    \r\n      }\r\n      if (submitted) {\r\n        return <Redirect push to={{\r\n          pathname: '/admin/dashboard'\r\n        }}\r\n        />\r\n      } \r\n    return <>\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6\">\r\n                <div className=\"card\">\r\n                    <h5 className=\"card-header\">Login</h5>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={onSubmitHandler}>\r\n                            <div className=\"mb-3\">\r\n                                <label for=\"username\" className=\"form-label\">Username</label>\r\n                                <input autoComplete=\"off\" type=\"text\" className={`form-control ${errorClass}`} id=\"username\" aria-describedby=\"usernameHelp\" name=\"username\" onChange = {onChangeHandler} required/>\r\n                                \r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                                <input autoComplete=\"off\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"  name=\"password\" onChange = {onChangeHandler} required/>\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}