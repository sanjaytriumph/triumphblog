[{"C:\\myreact\\triumphblog\\src\\index.js":"1","C:\\myreact\\triumphblog\\src\\App.js":"2","C:\\myreact\\triumphblog\\src\\reportWebVitals.js":"3","C:\\myreact\\triumphblog\\src\\pages\\Home.js":"4","C:\\myreact\\triumphblog\\src\\components\\NavBar.js":"5","C:\\myreact\\triumphblog\\src\\components\\PostDetail.js":"6","C:\\myreact\\triumphblog\\src\\components\\AddPost.js":"7","C:\\myreact\\triumphblog\\src\\components\\EditPost.js":"8","C:\\myreact\\triumphblog\\src\\components\\PostList.js":"9","C:\\myreact\\triumphblog\\src\\components\\DeletePost.js":"10","C:\\myreact\\triumphblog\\src\\components\\Login.js":"11","C:\\myreact\\triumphblog\\src\\components\\Logout.js":"12","C:\\myreact\\triumphblog\\src\\pages\\Dashboard.js":"13","C:\\myreact\\triumphblog\\src\\components\\DashboardMenu.js":"14","C:\\myreact\\triumphblog\\src\\pages\\admin\\AddNewPost.js":"15","C:\\myreact\\triumphblog\\src\\components\\admin\\AdminPostList.js":"16","C:\\myreact\\triumphblog\\src\\pages\\admin\\AllPosts.js":"17","C:\\myreact\\triumphblog\\src\\pages\\admin\\EditPostPage.js":"18","C:\\myreact\\triumphblog\\src\\loggedin-context.js":"19","C:\\myreact\\triumphblog\\src\\pages\\PageNotFound.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":2093,"mtime":1627915538099,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":181,"mtime":1627653117886,"results":"25","hashOfConfig":"22"},{"size":1941,"mtime":1627914804631,"results":"26","hashOfConfig":"22"},{"size":1163,"mtime":1627721367289,"results":"27","hashOfConfig":"22"},{"size":1844,"mtime":1627841845273,"results":"28","hashOfConfig":"22"},{"size":2573,"mtime":1627721336854,"results":"29","hashOfConfig":"22"},{"size":1862,"mtime":1627889578678,"results":"30","hashOfConfig":"22"},{"size":1167,"mtime":1627721412352,"results":"31","hashOfConfig":"22"},{"size":4105,"mtime":1627914630707,"results":"32","hashOfConfig":"22"},{"size":814,"mtime":1627914397222,"results":"33","hashOfConfig":"22"},{"size":739,"mtime":1627914233994,"results":"34","hashOfConfig":"22"},{"size":755,"mtime":1627843886179,"results":"35","hashOfConfig":"22"},{"size":720,"mtime":1627842716631,"results":"36","hashOfConfig":"22"},{"size":1382,"mtime":1627889496390,"results":"37","hashOfConfig":"22"},{"size":746,"mtime":1627843808814,"results":"38","hashOfConfig":"22"},{"size":723,"mtime":1627844128175,"results":"39","hashOfConfig":"22"},{"size":214,"mtime":1627887359313,"results":"40","hashOfConfig":"22"},{"size":314,"mtime":1627917088690,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14eclpq",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\myreact\\triumphblog\\src\\index.js",[],"C:\\myreact\\triumphblog\\src\\App.js",[],"C:\\myreact\\triumphblog\\src\\reportWebVitals.js",[],"C:\\myreact\\triumphblog\\src\\pages\\Home.js",[],"C:\\myreact\\triumphblog\\src\\components\\NavBar.js",["91","92","93","94","95","96"],"import React, {useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoggedinContext from '../loggedin-context';\r\n\r\nconst NavBar = function(){\r\n  const { loggedin, setLoggedin } = useContext(LoggedinContext);\r\n  //const [loggedIn, setLoggedIn] = useState();\r\n\r\n  //let loggedInVal = sessionStorage.getItem('loggedin');\r\n\r\n  // useEffect(() =>{\r\n  //   setLoggedIn(loggedInVal);\r\n  // },[loggedIn])\r\n\r\n  // console.log(loggedIn);\r\n    return <>\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-5\">\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                </li>\r\n               \r\n                {\r\n                  (loggedin == 'true')?\r\n                  <Link className=\"nav-link\" to=\"/admin/dashboard\">Dashboard</Link>\r\n                  :''\r\n                }\r\n                \r\n                <li className=\"nav-item\">\r\n                  {\r\n                    (loggedin == 'true')?\r\n                    <Link className=\"nav-link\" to=\"/logout\">Logout</Link>                    \r\n                    :\r\n                    <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                  }                \r\n                  \r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    </>\r\n}\r\n\r\n\r\nexport default NavBar","C:\\myreact\\triumphblog\\src\\components\\PostDetail.js",["97"],"import React,{useState,useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst PostDetail = function(props){\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n    const {id} = useParams();   \r\n    const postId = id.replace(':','');\r\n    //console.log(postId);\r\n    \r\n    const apiURL = 'http://localhost:3000/posts?id='+postId;\r\n    //console.log(apiURL);\r\n    const fetchData = function(){\r\n        axios.get(apiURL)\r\n        .then(res => {\r\n          const pdata = res.data;\r\n          return setPosts(pdata);\r\n        })\r\n    }\r\n\r\n      useEffect(() => {\r\n        fetchData();        \r\n      },[]);\r\n\r\n    return <>       \r\n        {\r\n            posts.map((item) =>{\r\n                return (<article className=\"card mb-4\" key={item.id}>\r\n                <div className=\"card-header\">\r\n                <h2 className=\"h4\">{item.title}</h2>\r\n                </div>                    \r\n                <div className=\"card-body article-content\">\r\n                    {item.content}\r\n                </div>\r\n            </article>)\r\n            })\r\n        }\r\n       \r\n    </>\r\n}\r\n\r\nexport default PostDetail;","C:\\myreact\\triumphblog\\src\\components\\AddPost.js",["98"],"import React,{useState} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nconst AddPost = function(){\r\n    const [posts, setPosts] = useState([]);\r\n    const [value, setValue] = useState({\r\n        postTitle:'',\r\n        postContent:''\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    \r\n    const onChangeHandler = (e) =>{\r\n        // console.log(e.target.value)\r\n        // e.target.name = e.target.value;\r\n        setValue({\r\n            ...value,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n      const onSubmitHandler = (e) =>{\r\n        e.preventDefault();\r\n       \r\n        const requestOptions = {\r\n            title: value.postTitle,\r\n            content: value.postContent\r\n        }\r\n        axios.post(\"http://localhost:3000/posts\",requestOptions)\r\n        .then(res => {\r\n            setSubmitted(true);\r\n            const pdata = res.data;\r\n            return setPosts(pdata);\r\n          })\r\n        \r\n      }\r\n      if (submitted) {\r\n        return <Redirect push to={{\r\n          pathname: '/'\r\n        }}\r\n        />\r\n      } \r\n    return <>\r\n        <h2 className=\"mb-5\">Add Blog Post Here</h2>\r\n        <form onSubmit = {onSubmitHandler}>\r\n            <div className=\"form-group mb-4\">\r\n                <labe>Blog title</labe>\r\n                <input type=\"text\" name=\"postTitle\" className=\"form-control\" required onChange = {onChangeHandler}/>\r\n            </div>\r\n            <div className=\"form-group mb-4\">\r\n                <labe>Blog content</labe>\r\n                <textarea name=\"postContent\" className=\"form-control\" required onChange = {onChangeHandler}></textarea>\r\n            </div>\r\n            <p className=\"text-end\"><button className=\"btn btn-info\">Submit Post</button></p>\r\n        </form>\r\n    </>\r\n}\r\n\r\nexport default AddPost","C:\\myreact\\triumphblog\\src\\components\\EditPost.js",["99"],"import React,{useState,useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nconst EditPost = function(props){\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [posts, setPosts] = useState({});\r\n    const [value, setValue] = useState();\r\n    const {id} = useParams();\r\n    \r\n    /*const {id,title,content} = useParams();*/\r\n    /*const inputTitle = title.replace(':','');\r\n    const inputContent = content.replace(':','');*/\r\n    \r\n    /*const [value, setValue] = useState({\r\n        postTitle:inputTitle,\r\n        postContent:inputContent\r\n    });*/   \r\n\r\n\r\n    const postId = id.replace(':','');\r\n    console.log(postId);\r\n\r\n   \r\n\r\n    const fetchData = () =>{\r\n        axios.get(\"http://localhost:3000/posts/\"+postId)\r\n        .then(res => {\r\n            const pdata = res.data;\r\n            return setPosts(pdata);\r\n          })\r\n    }\r\n    useEffect(() =>{\r\n        fetchData();    \r\n    },[]);\r\n\r\n    const onChangeHandler = (e) =>{\r\n        setValue({\r\n            ...value,\r\n            [e.target.name]: e.target.value\r\n        });\r\n        \r\n    }\r\n\r\n    const postData = () =>{\r\n\r\n        axios.patch(\"http://localhost:3000/posts/\"+postId,{\r\n            title: value.postTitle,\r\n            content: value.postContent            \r\n        })\r\n        .then((res)=>{\r\n            setSubmitted(true);\r\n            const pdata = res.data;\r\n            console.log(pdata);\r\n            return setPosts(pdata);\r\n        })\r\n    }\r\n    const onSubmitHandler= (e) =>{\r\n        e.preventDefault();\r\n        console.log('submitted');\r\n        postData();\r\n        \r\n    }\r\n    if (submitted) {\r\n        return <Redirect push to={{\r\n          pathname: '/'\r\n        }}\r\n        />\r\n      } \r\n    return <>\r\n        <h2 className=\"mb-5\">Edit Blog Post Here</h2>\r\n        <form onSubmit = {onSubmitHandler}>\r\n            <div className=\"form-group mb-4\">\r\n                <labe>Blog title</labe>\r\n                <input type=\"text\" name=\"postTitle\" className=\"form-control\" required defaultValue={posts.title} onChange={onChangeHandler}/>\r\n            </div>\r\n            <div className=\"form-group mb-4\">\r\n                <labe>Blog content</labe>\r\n                <textarea name=\"postContent\" className=\"form-control\" required defaultValue={posts.content} onChange={onChangeHandler}></textarea>\r\n            </div>\r\n            <p className=\"text-end\"><button className=\"btn btn-info\">Submit Post</button></p>\r\n        </form>\r\n    </>\r\n}\r\n\r\nexport default EditPost;","C:\\myreact\\triumphblog\\src\\components\\PostList.js",["100"],"import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst PostList = function(){\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n    function fetchData() {\r\n        // const res = await fetch(\"http://localhost:3000/posts\");\r\n        // const data = await res.json();\r\n\r\n        // return setPosts(data);\r\n        axios.get('http://localhost:3000/posts')\r\n        .then(res => {\r\n          const pdata = res.data;\r\n          return setPosts(pdata);\r\n        })\r\n      }\r\n      useEffect(() => {\r\n        fetchData();\r\n        console.log('after posts' + posts);\r\n      },[]);\r\n\r\n    return <>\r\n            \r\n        {\r\n            posts.slice(0).reverse().map((item) =>{\r\n                let content = item.content;\r\n                console.log(content.length);\r\n                if(content.length > 100){\r\n                    content = content.substr(0,100) + '...';\r\n                }\r\n                return (<article className=\"card mb-4\" key={item.id}>\r\n                <div className=\"card-header\">\r\n                <h2 className=\"h4\"><Link to={`post-detail/:${item.id}`}>{item.title}</Link></h2>\r\n                {/* <Link to={`edit-post/:${item.id}/:${item.title}/:${item.content}`}>edit</Link> */}\r\n                \r\n                </div>                    \r\n                <div className=\"card-body article-content\">                    \r\n                    {content}\r\n                    {\r\n                      (content.length > 100)? \r\n                      <p className=\"text-end mt-3\"><Link className=\"btn btn-primary btn-sm\" to={`post-detail/:${item.id}`}>Read More</Link></p>\r\n                      :''\r\n                    }\r\n                    \r\n                </div>\r\n            </article>)\r\n            })\r\n        }\r\n       \r\n    </>\r\n}\r\n\r\nexport default PostList","C:\\myreact\\triumphblog\\src\\components\\DeletePost.js",["101","102"],"import React,{useState,useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst DeletePost = function(){\r\n    const [posts, setPosts] = useState([]);\r\n    const {id} = useParams();\r\n   \r\n    const postId = id.replace(':','');\r\n    //console.log(postId);\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const apiURL = 'http://localhost:3000/posts/'+postId;\r\n    const fetchData = function(){\r\n        axios.delete(apiURL)\r\n        .then(res => {\r\n            setSubmitted(true);\r\n          const pdata = res.data;\r\n          return setPosts(pdata);\r\n        })\r\n    }\r\n\r\n      useEffect(() => {\r\n        fetchData();        \r\n      },[]);\r\n\r\n      if (submitted) {\r\n        return <Redirect push to={{\r\n          pathname: '/'\r\n        }}\r\n        />\r\n      }\r\n    return <>\r\n            <div className=\"text-center\">\r\n                <div className=\"spinner-border text-danger\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            \r\n    </>\r\n}\r\n\r\nexport default DeletePost","C:\\myreact\\triumphblog\\src\\components\\Login.js",["103","104","105","106","107","108"],"import React,{useState, useContext} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\nimport LoggedinContext from '../loggedin-context';\r\n\r\nconst Login = () => {\r\n    const { loggedin, setLoggedin } = useContext(LoggedinContext);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [value, setValue] = useState({\r\n        username:'',\r\n        password:''\r\n    });\r\n    const [error, setError] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const onChangeHandler = (e) =>{\r\n        const tid = e.target.id;\r\n        document.getElementById(tid).classList.remove('is-invalid');\r\n        setValue({\r\n            ...value,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const onSubmitHandler = (e) =>{\r\n        \r\n        e.preventDefault();  \r\n        if (value.username && value.password ) {\r\n            console.log(`submitted with the values ${value.username} and ${value.password}`);\r\n            axios.get('http://localhost:3000/login')\r\n            .then(res => {\r\n            const pdata = res.data;\r\n            //return setPosts(pdata);\r\n            \r\n            pdata.map((item,index) =>{\r\n                \r\n                if(item.username == value.username && item.password == value.password){\r\n                    console.log('good to go');\r\n                    //sessionStorage.setItem('loggedin','true');\r\n                    sessionStorage.setItem('loggedIn','true');\r\n                    sessionStorage.setItem('username',item.name);\r\n                    setSubmitted(true);\r\n                    setLoggedin(sessionStorage.getItem('loggedIn'));\r\n                    \r\n                }\r\n                else{\r\n                    setError(true);\r\n                    setErrorMsg('Invalid Credentials');\r\n                }\r\n            })\r\n            }) \r\n        }\r\n        else{\r\n                setError(true);\r\n                setErrorMsg('Please enter username and password');\r\n        }\r\n        if (value.username == false) {\r\n            document.getElementById('username').classList.add('is-invalid')\r\n        }\r\n        if (value.password == false) {\r\n            document.getElementById('password').classList.add('is-invalid')\r\n        }\r\n           \r\n      }\r\n      if (submitted) {\r\n        return <Redirect push to={{\r\n          pathname: '/admin/dashboard'\r\n        }}\r\n        />\r\n      } \r\n    return <>\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6\">\r\n                <div className=\"card\">\r\n                    <h5 className=\"card-header\">Login <small className=\"h6\">(username: sanjaykumar, password: sanjay123)</small> </h5>\r\n                    <div className=\"card-body\">\r\n                        {   (error)?\r\n                             <div className=\"alert alert-danger\">\r\n                                {errorMsg}\r\n                            </div>\r\n                         :''\r\n                        }\r\n                       \r\n                        <form onSubmit={onSubmitHandler}>\r\n                            <div className=\"mb-3\">\r\n                                <label for=\"username\" className=\"form-label\">Username</label>\r\n                                <input autoComplete=\"off\" type=\"text\" className=\"form-control\" id=\"username\" aria-describedby=\"usernameHelp\" name=\"username\" onChange = {onChangeHandler} />\r\n                                \r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                                <input autoComplete=\"off\" type=\"password\" className=\"form-control\" id=\"password\"  name=\"password\" onChange = {onChangeHandler} />\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Login","C:\\myreact\\triumphblog\\src\\components\\Logout.js",["109","110"],"import React,{useContext, useEffect} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport LoggedinContext from '../loggedin-context';\r\n\r\nconst Logout = () =>{\r\n  const { loggedin, setLoggedin } = useContext(LoggedinContext);\r\n    sessionStorage.removeItem('loggedIn');\r\n    sessionStorage.removeItem('username');\r\n    useEffect(() =>{\r\n      setLoggedin('false');\r\n    },[])\r\n    let submitted = true;\r\n    if (submitted) {\r\n        return <Redirect push to={{\r\n          pathname: '/'\r\n        }}\r\n        />\r\n      } \r\n    return <>\r\n            <div className=\"text-center\">\r\n                <div className=\"spinner-border text-danger\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n    </>\r\n}\r\n\r\nexport default Logout","C:\\myreact\\triumphblog\\src\\pages\\Dashboard.js",[],"C:\\myreact\\triumphblog\\src\\components\\DashboardMenu.js",[],"C:\\myreact\\triumphblog\\src\\pages\\admin\\AddNewPost.js",[],"C:\\myreact\\triumphblog\\src\\components\\admin\\AdminPostList.js",["111"],"import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst AdminPostList = function(){\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n    function fetchData() {\r\n        // const res = await fetch(\"http://localhost:3000/posts\");\r\n        // const data = await res.json();\r\n\r\n        // return setPosts(data);\r\n        axios.get('http://localhost:3000/posts')\r\n        .then(res => {\r\n          const pdata = res.data;\r\n          return setPosts(pdata);\r\n        })\r\n      }\r\n      useEffect(() => {\r\n        fetchData();\r\n        console.log('after posts' + posts);\r\n      },[]);\r\n\r\n    return <>\r\n            \r\n        {\r\n            posts.slice(0).reverse().map((item) =>{\r\n                \r\n                return (<article className=\"card mb-4\" key={item.id}>\r\n                <div className=\"card-header\">\r\n                <h2 className=\"h4\"><Link to={`edit-post/:${item.id}`}>{item.title}</Link></h2>\r\n                {/* <Link to={`edit-post/:${item.id}/:${item.title}/:${item.content}`}>edit</Link> */}\r\n                <Link to={`edit-post/:${item.id}`}> Edit</Link>\r\n                <Link to={`delete-post/:${item.id}`}> Delete</Link>\r\n                </div>                    \r\n               \r\n            </article>)\r\n            })\r\n        }\r\n       \r\n    </>\r\n}\r\n\r\nexport default AdminPostList","C:\\myreact\\triumphblog\\src\\pages\\admin\\AllPosts.js",[],"C:\\myreact\\triumphblog\\src\\pages\\admin\\EditPostPage.js",[],"C:\\myreact\\triumphblog\\src\\loggedin-context.js",[],"C:\\myreact\\triumphblog\\src\\pages\\PageNotFound.js",[],{"ruleId":"112","severity":1,"message":"113","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":24},{"ruleId":"112","severity":1,"message":"116","line":1,"column":26,"nodeType":"114","messageId":"115","endLine":1,"endColumn":35},{"ruleId":"112","severity":1,"message":"117","line":6,"column":21,"nodeType":"114","messageId":"115","endLine":6,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":19,"column":13,"nodeType":"120","endLine":19,"endColumn":50},{"ruleId":"121","severity":1,"message":"122","line":30,"column":29,"nodeType":"123","messageId":"124","endLine":30,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":37,"column":31,"nodeType":"123","messageId":"124","endLine":37,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":24,"column":9,"nodeType":"127","endLine":24,"endColumn":11,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"129","line":6,"column":12,"nodeType":"114","messageId":"115","endLine":6,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":36,"column":7,"nodeType":"127","endLine":36,"endColumn":9,"suggestions":"130"},{"ruleId":"125","severity":1,"message":"131","line":22,"column":9,"nodeType":"127","endLine":22,"endColumn":11,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"129","line":7,"column":12,"nodeType":"114","messageId":"115","endLine":7,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":26,"column":9,"nodeType":"127","endLine":26,"endColumn":11,"suggestions":"133"},{"ruleId":"112","severity":1,"message":"134","line":7,"column":13,"nodeType":"114","messageId":"115","endLine":7,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":35,"column":36,"nodeType":"137","messageId":"138","endLine":35,"endColumn":38},{"ruleId":"121","severity":1,"message":"122","line":37,"column":34,"nodeType":"123","messageId":"124","endLine":37,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":37,"column":69,"nodeType":"123","messageId":"124","endLine":37,"endColumn":71},{"ruleId":"121","severity":1,"message":"122","line":57,"column":28,"nodeType":"123","messageId":"124","endLine":57,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":60,"column":28,"nodeType":"123","messageId":"124","endLine":60,"endColumn":30},{"ruleId":"112","severity":1,"message":"134","line":6,"column":11,"nodeType":"114","messageId":"115","endLine":6,"endColumn":19},{"ruleId":"125","severity":1,"message":"139","line":11,"column":7,"nodeType":"127","endLine":11,"endColumn":9,"suggestions":"140"},{"ruleId":"125","severity":1,"message":"131","line":22,"column":9,"nodeType":"127","endLine":22,"endColumn":11,"suggestions":"141"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setLoggedin' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'posts' is assigned a value but never used.",["143"],"React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.",["144"],["145"],"'loggedin' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'setLoggedin'. Either include it or remove the dependency array.",["146"],["147"],{"desc":"148","fix":"149"},{"desc":"148","fix":"150"},{"desc":"151","fix":"152"},{"desc":"148","fix":"153"},{"desc":"154","fix":"155"},{"desc":"151","fix":"156"},"Update the dependencies array to be: [fetchData]",{"range":"157","text":"158"},{"range":"159","text":"158"},"Update the dependencies array to be: [posts]",{"range":"160","text":"161"},{"range":"162","text":"158"},"Update the dependencies array to be: [setLoggedin]",{"range":"163","text":"164"},{"range":"165","text":"161"},[650,652],"[fetchData]",[1002,1004],[642,644],"[posts]",[740,742],[382,384],"[setLoggedin]",[647,649]]