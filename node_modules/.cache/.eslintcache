[{"D:\\myreact\\triumphblog\\src\\index.js":"1","D:\\myreact\\triumphblog\\src\\reportWebVitals.js":"2","D:\\myreact\\triumphblog\\src\\App.js":"3","D:\\myreact\\triumphblog\\src\\loggedin-context.js":"4","D:\\myreact\\triumphblog\\src\\pages\\Home.js":"5","D:\\myreact\\triumphblog\\src\\pages\\PageNotFound.js":"6","D:\\myreact\\triumphblog\\src\\pages\\Dashboard.js":"7","D:\\myreact\\triumphblog\\src\\components\\NavBar.js":"8","D:\\myreact\\triumphblog\\src\\components\\Logout.js":"9","D:\\myreact\\triumphblog\\src\\pages\\admin\\AddNewPost.js":"10","D:\\myreact\\triumphblog\\src\\components\\PostDetail.js":"11","D:\\myreact\\triumphblog\\src\\pages\\admin\\AllPosts.js":"12","D:\\myreact\\triumphblog\\src\\pages\\admin\\EditPostPage.js":"13","D:\\myreact\\triumphblog\\src\\components\\AddPost.js":"14","D:\\myreact\\triumphblog\\src\\components\\DeletePost.js":"15","D:\\myreact\\triumphblog\\src\\components\\Login.js":"16","D:\\myreact\\triumphblog\\src\\components\\PostList.js":"17","D:\\myreact\\triumphblog\\src\\components\\DashboardMenu.js":"18","D:\\myreact\\triumphblog\\src\\components\\EditPost.js":"19","D:\\myreact\\triumphblog\\src\\components\\admin\\AdminPostList.js":"20","D:\\myreact\\triumphblog\\src\\components\\PostByAuthor.js":"21"},{"size":517,"mtime":1628428982684,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1628428982706,"results":"24","hashOfConfig":"23"},{"size":2967,"mtime":1657715960974,"results":"25","hashOfConfig":"23"},{"size":214,"mtime":1628428982685,"results":"26","hashOfConfig":"23"},{"size":672,"mtime":1657216642330,"results":"27","hashOfConfig":"23"},{"size":314,"mtime":1628428982688,"results":"28","hashOfConfig":"23"},{"size":759,"mtime":1657254976926,"results":"29","hashOfConfig":"23"},{"size":2100,"mtime":1657253986205,"results":"30","hashOfConfig":"23"},{"size":851,"mtime":1657267778661,"results":"31","hashOfConfig":"23"},{"size":770,"mtime":1657267027916,"results":"32","hashOfConfig":"23"},{"size":1198,"mtime":1657256236889,"results":"33","hashOfConfig":"23"},{"size":790,"mtime":1657254930351,"results":"34","hashOfConfig":"23"},{"size":770,"mtime":1657256207696,"results":"35","hashOfConfig":"23"},{"size":2378,"mtime":1657268246421,"results":"36","hashOfConfig":"23"},{"size":1229,"mtime":1628428978170,"results":"37","hashOfConfig":"23"},{"size":4268,"mtime":1657267672625,"results":"38","hashOfConfig":"23"},{"size":2507,"mtime":1657276548106,"results":"39","hashOfConfig":"23"},{"size":913,"mtime":1657268926157,"results":"40","hashOfConfig":"23"},{"size":3098,"mtime":1657268534411,"results":"41","hashOfConfig":"23"},{"size":1646,"mtime":1657276152692,"results":"42","hashOfConfig":"23"},{"size":2712,"mtime":1657276591078,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4zzcs6",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},"D:\\myreact\\triumphblog\\src\\index.js",[],"D:\\myreact\\triumphblog\\src\\reportWebVitals.js",[],"D:\\myreact\\triumphblog\\src\\App.js",[],"D:\\myreact\\triumphblog\\src\\loggedin-context.js",[],"D:\\myreact\\triumphblog\\src\\pages\\Home.js",[],"D:\\myreact\\triumphblog\\src\\pages\\PageNotFound.js",[],"D:\\myreact\\triumphblog\\src\\pages\\Dashboard.js",[],"D:\\myreact\\triumphblog\\src\\components\\NavBar.js",["96","97","98","99","100","101"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoggedinContext from \"../loggedin-context\";\r\n\r\nconst NavBar = function () {\r\n  const { loggedin, setLoggedin } = useContext(LoggedinContext);\r\n  //const [loggedIn, setLoggedIn] = useState();\r\n\r\n  //let loggedInVal = sessionStorage.getItem('loggedin');\r\n\r\n  // useEffect(() =>{\r\n  //   setLoggedIn(loggedInVal);\r\n  // },[loggedIn])\r\n\r\n  // console.log(loggedIn);\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Navbar\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ms-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n\r\n              {loggedin == \"true\" ? (\r\n                <Link className=\"nav-link\" to=\"/admin/dashboard\">\r\n                  Dashboard\r\n                </Link>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <li className=\"nav-item\">\r\n                {loggedin == \"true\" ? (\r\n                  <Link className=\"nav-link\" to=\"/logout\">\r\n                    Logout\r\n                  </Link>\r\n                ) : (\r\n                  <Link className=\"nav-link\" to=\"/login\">\r\n                    Login\r\n                  </Link>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","D:\\myreact\\triumphblog\\src\\components\\Logout.js",["102","103"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport LoggedinContext from \"../loggedin-context\";\r\n\r\nconst Logout = () => {\r\n  const { loggedin, setLoggedin } = useContext(LoggedinContext);\r\n  sessionStorage.removeItem(\"loggedIn\");\r\n  sessionStorage.removeItem(\"username\");\r\n  sessionStorage.removeItem(\"role\");\r\n  useEffect(() => {\r\n    setLoggedin(\"false\");\r\n  }, []);\r\n  let submitted = true;\r\n  if (submitted) {\r\n    return (\r\n      <Redirect\r\n        push\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"text-center\">\r\n        <div className=\"spinner-border text-danger\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","D:\\myreact\\triumphblog\\src\\pages\\admin\\AddNewPost.js",[],"D:\\myreact\\triumphblog\\src\\components\\PostDetail.js",["104"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst PostDetail = function (props) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const { id } = useParams();\r\n  const postId = id.replace(\":\", \"\");\r\n  //console.log(postId);\r\n\r\n  //const apiURL = 'http://localhost:3000/posts?id='+postId;\r\n\r\n  const apiURL = `${props.apiurl}posts?id=${postId}`;\r\n  //console.log(apiURL);\r\n  const fetchData = function () {\r\n    axios.get(apiURL).then((res) => {\r\n      const pdata = res.data;\r\n      return setPosts(pdata);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container pt-3\">\r\n        {posts.map((item) => {\r\n          return (\r\n            <article className=\"card mb-4\" key={item.id}>\r\n              <img src={item.thumbnail} alt=\"\" />\r\n              <div className=\"card-header\">\r\n                <h2 className=\"h4\">{item.title}</h2>\r\n              </div>\r\n              <div className=\"card-body article-content\">{item.content}</div>\r\n            </article>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n","D:\\myreact\\triumphblog\\src\\pages\\admin\\AllPosts.js",[],"D:\\myreact\\triumphblog\\src\\pages\\admin\\EditPostPage.js",[],"D:\\myreact\\triumphblog\\src\\components\\AddPost.js",["105"],"import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nconst AddPost = function (props) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [value, setValue] = useState({\r\n    postTitle: \"\",\r\n    postContent: \"\",\r\n    postThumbnail: \"\",\r\n  });\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const onChangeHandler = (e) => {\r\n    // console.log(e.target.value)\r\n    // e.target.name = e.target.value;\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const requestOptions = {\r\n      title: value.postTitle,\r\n      content: value.postContent,\r\n      thumbnail: value.postThumbnail,\r\n      author: sessionStorage.getItem(\"username\"),\r\n    };\r\n    console.log(requestOptions);\r\n    axios.post(`${props.apiurl}posts`, requestOptions).then((res) => {\r\n      setSubmitted(true);\r\n      const pdata = res.data;\r\n      return setPosts(pdata);\r\n    });\r\n  };\r\n  if (submitted) {\r\n    return (\r\n      <Redirect\r\n        push\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <h2 className=\"mb-5\">Add Blog Post Here</h2>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <div className=\"form-group mb-4\">\r\n          <label>Blog title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"postTitle\"\r\n            className=\"form-control\"\r\n            required\r\n            onChange={onChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"form-group mb-4\">\r\n          <label>Blog content</label>\r\n          <textarea\r\n            name=\"postContent\"\r\n            className=\"form-control\"\r\n            required\r\n            onChange={onChangeHandler}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"form-group mb-4\">\r\n          <label>\r\n            Blog thumbnail URL (\"Eg: https://picsum.photos/id/1/900/500\")\r\n          </label>\r\n          <input\r\n            type=\"url\"\r\n            name=\"postThumbnail\"\r\n            className=\"form-control\"\r\n            required\r\n            onChange={onChangeHandler}\r\n          />\r\n        </div>\r\n        <p className=\"text-end\">\r\n          <button className=\"btn btn-info\">Submit Post</button>\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n","D:\\myreact\\triumphblog\\src\\components\\DeletePost.js",["106","107"],"import React,{useState,useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst DeletePost = function(props){\r\n    const [posts, setPosts] = useState([]);\r\n    const {id} = useParams();\r\n   \r\n    const postId = id.replace(':','');\r\n    //console.log(postId);\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    // const apiURL = 'http://localhost:3000/posts/'+postId;\r\n    const apiURL = `${props.apiurl}posts/${postId}`;\r\n    const fetchData = function(){\r\n        axios.delete(apiURL)\r\n        .then(res => {\r\n            setSubmitted(true);\r\n          const pdata = res.data;\r\n          return setPosts(pdata);\r\n        })\r\n    }\r\n\r\n      useEffect(() => {\r\n        fetchData();        \r\n      },[]);\r\n\r\n      if (submitted) {\r\n        return <Redirect push to={{\r\n          pathname: '/'\r\n        }}\r\n        />\r\n      }\r\n    return <>\r\n            <div className=\"text-center\">\r\n                <div className=\"spinner-border text-danger\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            \r\n    </>\r\n}\r\n\r\nexport default DeletePost","D:\\myreact\\triumphblog\\src\\components\\Login.js",["108","109","110","111","112","113"],"import React, { useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport LoggedinContext from \"../loggedin-context\";\r\n\r\nconst Login = (props) => {\r\n  const { loggedin, setLoggedin } = useContext(LoggedinContext);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [value, setValue] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const onChangeHandler = (e) => {\r\n    const tid = e.target.id;\r\n    document.getElementById(tid).classList.remove(\"is-invalid\");\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (value.username && value.password) {\r\n      console.log(\r\n        `submitted with the values ${value.username} and ${value.password}`\r\n      );\r\n      axios.get(`${props.apiurl}login`).then((res) => {\r\n        const pdata = res.data;\r\n        //return setPosts(pdata);\r\n\r\n        pdata.map((item, index) => {\r\n          if (\r\n            item.username == value.username &&\r\n            item.password == value.password\r\n          ) {\r\n            console.log(\"good to go\");\r\n            //sessionStorage.setItem('loggedin','true');\r\n            sessionStorage.setItem(\"loggedIn\", \"true\");\r\n            sessionStorage.setItem(\"username\", item.username);\r\n            sessionStorage.setItem(\"role\", item.role);\r\n            setSubmitted(true);\r\n            setLoggedin(sessionStorage.getItem(\"loggedIn\"));\r\n          } else {\r\n            setError(true);\r\n            setErrorMsg(\"Invalid Credentials\");\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      setError(true);\r\n      setErrorMsg(\"Please enter username and password\");\r\n    }\r\n    if (value.username == false) {\r\n      document.getElementById(\"username\").classList.add(\"is-invalid\");\r\n    }\r\n    if (value.password == false) {\r\n      document.getElementById(\"password\").classList.add(\"is-invalid\");\r\n    }\r\n  };\r\n  if (submitted) {\r\n    return (\r\n      <Redirect\r\n        push\r\n        to={{\r\n          pathname: \"/admin/dashboard\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container pt-3\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <h5 className=\"card-header\">\r\n                Login{\" \"}\r\n                <small className=\"h6\">\r\n                  (username: sanjaykumar, password: sanjay123)\r\n                </small>{\" \"}\r\n              </h5>\r\n              <div className=\"card-body\">\r\n                {error ? (\r\n                  <div className=\"alert alert-danger\">{errorMsg}</div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <form onSubmit={onSubmitHandler}>\r\n                  <div className=\"mb-3\">\r\n                    <label for=\"username\" className=\"form-label\">\r\n                      Username\r\n                    </label>\r\n                    <input\r\n                      autoComplete=\"off\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"username\"\r\n                      aria-describedby=\"usernameHelp\"\r\n                      name=\"username\"\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label for=\"exampleInputPassword1\" className=\"form-label\">\r\n                      Password\r\n                    </label>\r\n                    <input\r\n                      autoComplete=\"off\"\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      onChange={onChangeHandler}\r\n                    />\r\n                  </div>\r\n\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\myreact\\triumphblog\\src\\components\\PostList.js",["114"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst PostList = function (props) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  function fetchData() {\r\n    // const res = await fetch(\"http://localhost:3000/posts\");\r\n    // const data = await res.json();\r\n\r\n    // return setPosts(data);\r\n    axios.get(`${props.apiurl}posts`).then((res) => {\r\n      const pdata = res.data;\r\n      return setPosts(pdata);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n    console.log(\"after posts\" + posts);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div class=\"row\">\r\n          {posts\r\n            .slice(0)\r\n            .reverse()\r\n            .map((item) => {\r\n              let content = item.content;\r\n              console.log(content.length);\r\n              if (content.length > 100) {\r\n                content = content.substr(0, 100) + \"...\";\r\n              }\r\n              return (\r\n                <div className=\"col-md-4\" key={item.id}>\r\n                  <article className=\"card mb-4\">\r\n                    <div className=\"card-header p-0\">\r\n                      {/* <Link to={`edit-post/:${item.id}/:${item.title}/:${item.content}`}>edit</Link> */}\r\n                      <img className=\"img-fluid\" src={item.thumbnail} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"card-body article-content\">\r\n                      <h2 className=\"h4 post-title\">\r\n                        <Link to={`post-detail/:${item.id}`}>{item.title}</Link>\r\n                      </h2>\r\n                      {content}\r\n                      {content.length > 100 ? (\r\n                        <p className=\"text-end mt-3\">\r\n                          <Link\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            to={`post-detail/:${item.id}`}\r\n                          >\r\n                            Read More\r\n                          </Link>\r\n                        </p>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                      Author:\r\n                      <Link to={`author/:${item.author}`}>{item.author}</Link>\r\n                    </div>\r\n                  </article>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","D:\\myreact\\triumphblog\\src\\components\\DashboardMenu.js",[],"D:\\myreact\\triumphblog\\src\\components\\EditPost.js",["115"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nconst EditPost = function (props) {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [posts, setPosts] = useState({});\r\n  const [value, setValue] = useState();\r\n  const { id } = useParams();\r\n\r\n  /*const {id,title,content} = useParams();*/\r\n  /*const inputTitle = title.replace(':','');\r\n    const inputContent = content.replace(':','');*/\r\n\r\n  /*const [value, setValue] = useState({\r\n        postTitle:inputTitle,\r\n        postContent:inputContent\r\n    });*/\r\n\r\n  const postId = id.replace(\":\", \"\");\r\n  console.log(postId);\r\n  console.log(props);\r\n\r\n  const fetchData = () => {\r\n    // axios.get(\"http://localhost:3000/posts/\"+postId)\r\n    axios.get(`${props.apiurl}posts/${postId}`).then((res) => {\r\n      const pdata = res.data;\r\n      return setPosts(pdata);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onChangeHandler = (e) => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const postData = () => {\r\n    // axios.patch(\"http://localhost:3000/posts/\"+postId,{\r\n    axios\r\n      .patch(`${props.apiurl}posts/${postId}`, {\r\n        title: value.postTitle,\r\n        content: value.postContent,\r\n        thumbnail: value.postThumbnail,\r\n      })\r\n      .then((res) => {\r\n        setSubmitted(true);\r\n        const pdata = res.data;\r\n        console.log(pdata);\r\n        return setPosts(pdata);\r\n      });\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"submitted\");\r\n    postData();\r\n  };\r\n  if (submitted) {\r\n    return (\r\n      <Redirect\r\n        push\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <h2 className=\"mb-5\">Edit Blog Post Here</h2>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <div className=\"form-group mb-4\">\r\n          <labe>Blog title</labe>\r\n          <input\r\n            type=\"text\"\r\n            name=\"postTitle\"\r\n            className=\"form-control\"\r\n            required\r\n            defaultValue={posts.title}\r\n            onChange={onChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"form-group mb-4\">\r\n          <labe>Blog content</labe>\r\n          <textarea\r\n            name=\"postContent\"\r\n            className=\"form-control\"\r\n            required\r\n            defaultValue={posts.content}\r\n            onChange={onChangeHandler}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"form-group mb-4\">\r\n          <labe>Blog thumbnail URL</labe>\r\n          <input\r\n            type=\"text\"\r\n            name=\"postThumbnail\"\r\n            className=\"form-control\"\r\n            required\r\n            defaultValue={posts.thumbnail}\r\n            onChange={onChangeHandler}\r\n          />\r\n        </div>\r\n        <p className=\"text-end\">\r\n          <button className=\"btn btn-info\">Submit Post</button>\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","D:\\myreact\\triumphblog\\src\\components\\admin\\AdminPostList.js",["116"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminPostList = function (props) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  function fetchData() {\r\n    // const res = await fetch(\"http://localhost:3000/posts\");\r\n    // const data = await res.json();\r\n\r\n    // return setPosts(data);\r\n    if (sessionStorage.getItem(\"role\") === \"user\") {\r\n      axios\r\n        .get(\r\n          `${props.apiurl}posts?author=${sessionStorage.getItem(\"username\")}`\r\n        )\r\n        .then((res) => {\r\n          const pdata = res.data;\r\n          return setPosts(pdata);\r\n        });\r\n    } else {\r\n      axios.get(`${props.apiurl}posts`).then((res) => {\r\n        const pdata = res.data;\r\n        return setPosts(pdata);\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n    console.log(\"after posts\" + posts);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {posts\r\n        .slice(0)\r\n        .reverse()\r\n        .map((item) => {\r\n          return (\r\n            <article className=\"card mb-4\" key={item.id}>\r\n              <div className=\"card-header\">\r\n                <h2 className=\"h4 post-title\">\r\n                  <Link to={`edit-post/:${item.id}`}>{item.title}</Link>\r\n                </h2>\r\n                {/* <Link to={`edit-post/:${item.id}/:${item.title}/:${item.content}`}>edit</Link> */}\r\n                <Link to={`edit-post/:${item.id}`}> Edit</Link> &nbsp;\r\n                <Link to={`delete-post/:${item.id}`}> Delete</Link>\r\n              </div>\r\n            </article>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPostList;\r\n","D:\\myreact\\triumphblog\\src\\components\\PostByAuthor.js",["117"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst PostByAuthor = function (props) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const { author } = useParams();\r\n  const postAuthor = author.replace(\":\", \"\");\r\n  //console.log(postId);\r\n\r\n  //const apiURL = 'http://localhost:3000/posts?id='+postId;\r\n\r\n  //const apiURL = `${props.apiurl}posts?id=${postId}`;\r\n  const apiURL = `${props.apiurl}posts?author=${postAuthor}`;\r\n  //console.log(apiURL);\r\n  const fetchData = function () {\r\n    axios.get(apiURL).then((res) => {\r\n      const pdata = res.data;\r\n      return setPosts(pdata);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container pt-3\">\r\n        <div className=\"row\">\r\n          {posts\r\n            .slice(0)\r\n            .reverse()\r\n            .map((item) => {\r\n              let content = item.content;\r\n              console.log(content.length);\r\n              if (content.length > 100) {\r\n                content = content.substr(0, 100) + \"...\";\r\n              }\r\n              return (\r\n                <div className=\"col-md-4\" key={item.id}>\r\n                  <article className=\"card mb-4\">\r\n                    <div className=\"card-header p-0\">\r\n                      {/* <Link to={`edit-post/:${item.id}/:${item.title}/:${item.content}`}>edit</Link> */}\r\n                      <img className=\"img-fluid\" src={item.thumbnail} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"card-body article-content\">\r\n                      <h2 className=\"h4 post-title\">\r\n                        <Link to={`post-detail/:${item.id}`}>{item.title}</Link>\r\n                      </h2>\r\n                      {content}\r\n                      {content.length > 100 ? (\r\n                        <p className=\"text-end mt-3\">\r\n                          <Link\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            to={`/post-detail/:${item.id}`}\r\n                          >\r\n                            Read More\r\n                          </Link>\r\n                        </p>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                      Author:\r\n                      <Link to={`/author/:${item.author}`}>{item.author}</Link>\r\n                    </div>\r\n                  </article>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostByAuthor;\r\n",{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"122","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"123","line":6,"column":21,"nodeType":"120","messageId":"121","endLine":6,"endColumn":32},{"ruleId":"124","severity":1,"message":"125","line":20,"column":11,"nodeType":"126","endLine":20,"endColumn":48},{"ruleId":"127","severity":1,"message":"128","line":42,"column":25,"nodeType":"129","messageId":"130","endLine":42,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":51,"column":27,"nodeType":"129","messageId":"130","endLine":51,"endColumn":29},{"ruleId":"118","severity":1,"message":"131","line":6,"column":11,"nodeType":"120","messageId":"121","endLine":6,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":12,"column":6,"nodeType":"134","endLine":12,"endColumn":8,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":25,"column":6,"nodeType":"134","endLine":25,"endColumn":8,"suggestions":"137"},{"ruleId":"118","severity":1,"message":"138","line":6,"column":10,"nodeType":"120","messageId":"121","endLine":6,"endColumn":15},{"ruleId":"118","severity":1,"message":"138","line":7,"column":12,"nodeType":"120","messageId":"121","endLine":7,"endColumn":17},{"ruleId":"132","severity":1,"message":"136","line":27,"column":9,"nodeType":"134","endLine":27,"endColumn":11,"suggestions":"139"},{"ruleId":"118","severity":1,"message":"131","line":7,"column":11,"nodeType":"120","messageId":"121","endLine":7,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":35,"column":33,"nodeType":"142","messageId":"143","endLine":35,"endColumn":35},{"ruleId":"127","severity":1,"message":"128","line":37,"column":27,"nodeType":"129","messageId":"130","endLine":37,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":38,"column":27,"nodeType":"129","messageId":"130","endLine":38,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":57,"column":24,"nodeType":"129","messageId":"130","endLine":57,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":60,"column":24,"nodeType":"129","messageId":"130","endLine":60,"endColumn":26},{"ruleId":"132","severity":1,"message":"144","line":21,"column":6,"nodeType":"134","endLine":21,"endColumn":8,"suggestions":"145"},{"ruleId":"132","severity":1,"message":"136","line":34,"column":6,"nodeType":"134","endLine":34,"endColumn":8,"suggestions":"146"},{"ruleId":"132","severity":1,"message":"144","line":32,"column":6,"nodeType":"134","endLine":32,"endColumn":8,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"136","line":27,"column":6,"nodeType":"134","endLine":27,"endColumn":8,"suggestions":"148"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setLoggedin' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loggedin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoggedin'. Either include it or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["150"],"'posts' is assigned a value but never used.",["151"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'fetchData' and 'posts'. Either include them or remove the dependency array.",["152"],["153"],["154"],["155"],{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"161","fix":"162"},{"desc":"158","fix":"163"},{"desc":"161","fix":"164"},{"desc":"158","fix":"165"},"Update the dependencies array to be: [setLoggedin]",{"range":"166","text":"167"},"Update the dependencies array to be: [fetchData]",{"range":"168","text":"169"},{"range":"170","text":"169"},"Update the dependencies array to be: [fetchData, posts]",{"range":"171","text":"172"},{"range":"173","text":"169"},{"range":"174","text":"172"},{"range":"175","text":"169"},[416,418],"[setLoggedin]",[654,656],"[fetchData]",[802,804],[585,587],"[fetchData, posts]",[1009,1011],[900,902],[775,777]]